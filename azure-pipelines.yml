
# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'ac388d23-a1f9-4b05-a70a-caf2a04c9ab8'
  imageRepository: 'rajeshmcloudnativeapp'
  containerRegistry: 'devopsdemodcr.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'devopsdemodcrd838-auth'

  

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
#    steps:
#    - task: Maven@3
#      inputs:
#        mavenPomFile: 'AppCode/pom.xml'
#        goals: 'package'
#    - task: Docker@2
#      displayName: Build and push an image to container registry
#      inputs:
#        command: buildAndPush
#        repository: $(imageRepository)
#        dockerfile: $(dockerfilePath)
#        containerRegistry: $(dockerRegistryServiceConnection)
#        tags: |
#         $(tag)
          
#    - upload: manifests
#      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
   - job: HelmInstall
     displayName: HelmInstall

     pool:
      vmImage: $(vmImageName)
     steps:
     #- task: HelmDeploy@0
     #  displayName: Helm init
     #  inputs:
     #   connectionType: 'Azure Resource Manager'
     #   azureSubscription: 'Visual Studio Enterprise Subscription(bc96fb25-0001-4aeb-a9b7-4b49f30c94f5)'
     #   azureResourceGroup: 'myResourceGroup'
     #   kubernetesCluster: 'myAKSCluster'
     #   namespace: 'default'
     #   command: init
     #   upgradetiller: true
     #   waitForExecution: true
     #   arguments: --client-only
        #command: 'repo'
        #arguments: 'add svc-cat https://svc-catalog-charts.storage.googleapis.com'
        - task: AzureCLI@2
          displayName: Azure CLI
          inputs:
            azureSubscription: 'Visual Studio Enterprise Subscription(3)(bc96fb25-0001-4aeb-a9b7-4b49f30c94f5)'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az --version
              echo $Myname
              az aks get-credentials -n myAKSCluster -g myResourceGroup
              helm version
              pwd
              ls -rlt
              helm repo add nginx-stable https://helm.nginx.com/stable
              helm repo update
              helm repo list
              helm install -f local_values.yaml --name=rajesh nginx-stable/nginx-ingress
              az account show
          name: installnginx
      #  - task: HelmDeploy@0
      #    inputs:
      #      connectionType: 'Azure Resource Manager'
      #      azureSubscription: 'Visual Studio Enterprise Subscription(4)(bc96fb25-0001-4aeb-a9b7-4b49f30c94f5)'
      #      azureResourceGroup: 'myResourceGroup'
      #      kubernetesCluster: 'myAKSCluster'
      #      namespace: 'default'
      #      command: 'upgrade'
      #      chartType: 'FilePath'
      #      chartPath: 'nginx-stable/nginx-ingress'
      ##      chartVersion: '1'
      #      releaseName: 'my-release-1'
      #      overrideValues: 'NAME=SHUBHASIS'
      #      #recreate: true
      #      force: true
    # - task: HelmDeploy@0
       
    #   inputs:
    #     connectionType: 'Azure Resource Manager'
    #     azureSubscription: 'Visual Studio Enterprise Subscription(1)(bc96fb25-0001-4aeb-a9b7-4b49f30c94f5)'
    #     azureResourceGroup: 'myResourceGroup'
    #     kubernetesCluster: 'myAKSCluster'
    #     namespace: 'default'
         
         #command: 'helm repo add stable https://kubernetes-charts.storage.googleapis.com/" https://helm.sh/docs/intro/quickstart/'
    #     chartType: 'Name'
    #     chartName: 'stable/mysql'
    #     overrideValues: 'test=shubhasis'
         
     